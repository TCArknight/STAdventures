<?xml version="1.0" encoding="UTF-8"?>

<!-- This is the definition file that provides the basis for everything else. All of
      the Skeleton data files contain examples of the most common behaviors you'll
      need and can be readily adapted to the game system you want to support. You'll
      find inline comments throughout all of the Skeleton data files that describe
      what is being done, as well as external documentation that outlines how
      everything is structured and how all the pieces fit together. A detailed
      example is also provided that outlines how to adapt these Skeleton data files
      for use with the Savage Worlds game system.
-->

<document signature="Hero Lab Definition">

  <!-- The "game" element is where you'll define the basics for the game system.
  -->

  <game
    game="Star Trek Adventures"
    publisher="Modiphius"
    website="https://www.modiphius.net/collections/star-trek-adventures"
    copyright="TBD"
    legaloutput="TBD">
    </game>

  <!-- The "author" element is where you'll provide details about yourself as the
        author of the data files.
  -->

  <author
    author="Thomas Clegg"
    email="TCArknight@yahoo.com"
    website="">
    </author>

  <!-- The "release" element specifies the details for each new revision of the data
        files that you make available to others. This makes it easy to track the
        version of the data files in which problems occur and ensures that other
        users can verify that they update to new versions when you publish them.
  -->

  <release
    major="1"
    minor="10"
    required="8.9h"
    summary=""><![CDATA[{align center}{bmp logo}
	{b}{text ffff80}{align center}Star Trek Adventures for Hero Lab{text 010101}{/b}

{align left}STARFLEET NEEDS A NEW CREW
Welcome to your new assignment, Captain. Your continuing mission, to explore strange new worlds, seek out new life and new civilizations, to bodly go where no one has gone beforeâ€¦

Star Trek Adventures takes you to the Final Frontier of the Galaxy, where new discoveries await keen explorers of Starfleet. Your duties may take you to the edges of known space, or to Federation colonies in need, to the borders of neighbouring galactic powers or into the eye of interstellar phenomena. Your ship and your crew epitomise the best Starfleet and the United Federation of Planets has to offer, and you are needed more than ever.

These Herolab files are provided to allow you to quickly customize your Main hero, a supporting character, or even your starship. 

{b}{text ffff80}Legal Information:{text 010101}{/b}
STAR TREK and related marks and logos are trademarks of CBS Studios Inc. All Rights Reserved.
STAR TREK ADVENTURES, the 2d20 system and related marks and logos are copyright of Modiphius Entertainment Ltd. All Rights Reserved.
]]>
    </release>

  <!-- The "structure" element defines special structural details about the data files
        and how Hero Lab should manage them. We allow wider summary panels than normal
        to show a statblock within them.
  -->

  <structure
    folder="stadventures"
    summarymax="250">
    </structure>

  <!-- The "behavior" element specifies assorted behavioral aspects of the data files
        that reflect the nuances of both the game system and the data files your create.
  -->

  <behavior>

    <!-- Configure how the integrate dice roller should behave for this game system. -->

    <diceroller mode="totals" dietype="6" quantity="1"/>

    <!-- Define how each lead is displayed to the user when importing from a portfolio. -->

    <leadsummary><![CDATA[
      ~start with the race
      var txt as string
      txt = hero.findchild[Species].field[name].text
      if (empty(txt) <> 0) then
        txt = "No Species"
        endif
      @text &= txt

      ~append the CP rating of the character
      ~@text &= " - CP: " & hero.child[resCP].field[resMax].text
      ]]></leadsummary>

    <!-- Define how the initiative is auto-calculated by the Tactical Console. -->

    <initiative><![CDATA[
      ~calculate the primary initiative rating
      @initiative = random(10) + 1
      ~calculate the tiebreaker initiative rating
      @tiebreaker = 0
      ]]></initiative>

    </behavior>


  <!-- Define an assortment of macros that will make writing scripts faster and easier. -->

  <scriptmacro
    name="userresetAbil"
    param1="abil"
    result="perform hero.childfound[#abil].field[abiUser].reset"/>
  <scriptmacro
    name="ability"
    param1="abil"
    result="hero.childfound[#abil].field[abiFinal].value"/>	
  <scriptmacro
    name="abilfound"
    param1="abil"
    result="hero.childfound[#abil].field[abiFinal].value"/>
  <scriptmacro
    name="abilbonus"
    param1="abil"
    result="hero.childfound[#abil].field[abiBonus].value"/>
  <scriptmacro
    name="abilinplay"
    param1="abil"
    result="hero.childfound[#abil].field[abiInPlay].value"/>
  <scriptmacro
    name="abiluser"
    param1="abil"
    result="hero.childfound[#abil].field[abiUser].value"/>
  <scriptmacro
    name="abilminimum"
    param1="abil"
    result="hero.childfound[#abil].field[abiMinimum].value"/>
  <scriptmacro
    name="abilfinal"
    param1="abil"
    result="hero.childfound[#abil].field[abiFinal].value"/>
	<scriptmacro
    name="childname"
    param1="child"
    result="hero.childfound[#child].field[name].text"/>
  <scriptmacro
    name="resmax"
    param1="resource"
    result="hero.child[#resource].field[resMax].value"/>
  <scriptmacro
    name="resspent"
    param1="resource"
    result="hero.child[#resource].field[resSpent].value"/>
  <scriptmacro
    name="resleft"
    param1="resource"
    result="hero.child[#resource].field[resLeft].value"/>
  <scriptmacro
    name="resextra"
    param1="resource"
    result="hero.child[#resource].field[resExtra].value"/>

  <scriptmacro
    name="trkmax"
    param1="tracker"
    result="hero.child[#tracker].field[trkMax].value"/>

  <scriptmacro
    name="isspecies"
    param1="species"
    result="hero.tagis[CountsAsSpecies.#species]"/>

  <scriptmacro
    name="isera"
    param1="era"
    result="hero.tagis[source.#era]"/>

  <scriptmacro
    name="ischaractertype"
    param1="type"
    result="hero.tagis[CharType.#type]"/>
	
  <scriptmacro
    name="haschoice1"
    param1="myComp"
    result="hero.childfound[#myComp].field[usrChosen1].ischosen"/>

  <scriptmacro
    name="choiceid"
    param1="myComp"
    result="hero.childfound[#myComp].field[usrChosen1].chosen.idstring"/>
	
  <scriptmacro
    name="hastalent"
    param1="talent"
    result="hero.tagis[HasTalent.#talent]"/>
	
  <scriptmacro
    name="stressmax"
    result="herofield[acStrMax].value"/>

  <scriptmacro
    name="stressnow"
    result="herofield[acStrNow].value"/>

  <scriptmacro
    name="resistnon"
    result="hero.childfound[trResist].field[abiValue1].value"/>
	
  <scriptmacro
    name="resistbonus"
    result="hero.childfound[trResist].field[abiBonus].value"/>	

  <scriptmacro
    name="resistance"
    result="hero.childfound[trResist].field[abiFinal].text"/>	
	
  <scriptmacro
    name="shipsystem"
    param1="system"
    result="hero.child[#system].field[abiFinal].value"/>
	
  <scriptmacro
    name="shipsysbon"
    param1="system"
    result="hero.child[#system].field[abiBonus].value"/>
	
  <scriptmacro
    name="shipdept"
    param1="department"
    result="hero.child[#department].field[abiFinal].value"/>
	
  <scriptmacro
    name="shipyear"
    result="hero.childfound[mscShip].field[shipYear].text"/>

  <scriptmacro
    name="shipscale"
    result="hero.childfound[mscShip].field[shipScale].value"/>
	
  <scriptmacro
    name="ischaracter"
    result="(hero.tagis[CharType.typMain] + hero.tagis[CharType.typSupport])"/>
	
  <scriptmacro
    name="isstarship"
    result="hero.tagis[CharType.typShip]"/>
	
  <scriptmacro
    name="isstarbase"
    result="hero.tagis[CharType.typBase]"/>

  <scriptmacro
    name="prependdesc"
    param1="thing"
    param2="append"
    result="perform state.thing[#thing].amendthing[description,#append &amp; &quot;{br}{br}&quot; &amp; state.thing[#thing].field[descript].text]"/>
	
  <scriptmacro
    name="appenddesc"
    param1="thing"
    param2="append"
	param3="source"
    result="perform state.thing[#thing].amendthing[description,state.thing[#thing].field[descript].text &amp; &quot;{br}{br}{b}&quot; &amp; #source &amp; &quot;:{/b}{br}&quot; &amp; #append]"/>
	
  <!-- Decoration character used in summary panel headertitle scripts -->
  <scriptmacro
    name="summtitle_decoration" result="chr(150)"/>


  <!-- The "advancement" element controls whether serialized advancement logic is enabled
        and how the advancement mechanisms should behave for the game system.
  -->

  <advancement
    enable="yes">

    <!-- Verify that the character can be transitioned to advancement mode -->

    <canadvance><![CDATA[
      var bullet as string
      bullet = "{bmp bullet_red}{horz 4}"
      @message = ""

      ~perform tests to assure all starting resources have been assigned
      if (#resleft[resTalent] <> 0) then
        @message &= bullet & "Talent slots must be assigned for the character.{br}"
        endif
      ]]></canadvance>

    <!-- Handle the transition to/from advancement mode -->

    <transition><![CDATA[
      if (state.iscreate <> 0) then
        @message = "{b}{text ffff00}Creation Phase{text 010101}{/b}"
        @message &= "{br}{br}"
        @message &= "{align left}You have unlocked your character, thereby exiting the Character Advancement phase and moving back to the Character Creation phase. "
        @message &= "{br}{br}"
        @message &= "While unlocked, abils defined during character creation can be adjusted, as long as those abils have not yet been altered on the Advances tab. "
        @message &= "Traits that already have advancements applied to them will remain locked unless those advancements are deleted. "
        @message &= "{br}{br}"
        @message &= "Lock your character and remove any advancements on a abil if you wish to revise the rating that abil was given during character creation. "
      else
        @message = "{b}{text ffff00}Advancement Phase{text 010101}{/b}"
        @message &= "{br}{br}"
        @message &= "{align left}You have locked your character creation abils. "
        @message &= "{br}{br}"
        @message &= "By locking your character creation abils, you have begun the Character Advancement phase of play. "
        @message &= "While locked, you cannot alter abils defined during character creation. "
        @message &= "Use the Advances tab while the character is locked to allocate advances to new abilities or to increase existing abils. "
        @message &= "{br}{br}"
        @message &= "Unlock the character to go back to the Character Creation phase. "
        endif
      ]]></transition>


    </advancement>


  <!-- The "phase" elements define the various evaluation stages that all processing of
        scripts will be channeled through. Each phase identifies a stage, with the list
        of phases being processed in the order specified below. Within each phase, the
        priority value assigned controls the processing order.
  -->

  <phase
    id="Initialize"
    name="Initialization"
    description="Anything that has to happen before everything else">
    </phase>

  <phase
    id="Setup"
    name="Setup"
    description="Anything that has to be processed before normal processing gets underway">
    </phase>

  <phase
    id="Effects"
    name="Effects"
    description="Apply derived effects that influence equipment modifiers and the like">
    </phase>

  <phase
    id="PreAbility"
    name="Pre-Ability"
    description="Adjustments to abilities before they are finalized">
    </phase>

  <phase
    id="Ability"
    name="Ability"
    description="Finalization of ability values">
    </phase>

  <!-- NOTE! All Stress calculations are assumed to occur within the 5000-5999 priority range during this phase. -->
  <phase
    id="Stress"
    name="Stress"
    description="Finalization of Stress values.">
    </phase>
	
  <phase
    id="Final"
    name="Final"
    description="Any last-minute processing that must happen after everything else">
    </phase>

  <phase
    id="Validate"
    name="Validation"
    description="Validation tests that occur after all evaluation processing">
    </phase>

  <phase
    id="Render"
    name="Render"
    description="Any processing that simply renders values for use by the UI or processes last-minute validation - no calculations">
    </phase>


  </document>
