<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- This file contains the definition of the "Skills" tab panel. This tab is where
      the user selects and adjusts the skills for the character.

      All public visual elements used with this tab panel start with the prefix "sk"
      to associate them with the tab.
-->

<document signature="Hero Lab Data">
	  
  <template
    id="spSpcTemp"
    name="Species Template"
    compset="Species"
    marginhorz="3"
    marginvert="2">

    <portal
      id="spSpcTitle"
      style="lblTitle">
      <label>
        <labeltext><![CDATA[
          @text = "Description"
          ]]></labeltext>
        </label>
      </portal>
      
    <portal
      id="spSpcDesc"
      style="lblBrdLeft">
      <label
        field="descript"
        ismultiline="yes">
        </label>
      </portal>
                
    <position><![CDATA[
      ~set up our dimensions, with a width that we dictate; our width can vary
     
      portal[spSpcTitle].height = 20

      ~position the description on the left and let it use all available space
      portal[spSpcTitle].top = 0
      portal[spSpcTitle].left = 0
      portal[spSpcTitle].width = width
      
      portal[spSpcDesc].top = portal[spSpcTitle].bottom + 5
      portal[spSpcDesc].left = 0
      portal[spSpcDesc].width = width
      portal[spSpcDesc].height = height

      ]]></position>

    </template>

  <template
    id="spSpcMenus"
    name="Species Menus"
    compset="Species"
    marginhorz="3"
    marginvert="2">
	
	<portal 
	  id="chkAugment" 
	  style="chkNormal" 
	  showinvalid="yes"
	  tiptext="Click if hero is Augmented">
	  <checkbox 
	    field="spcIsAugment"
		message="Character is an Augment?"
		/>
	  </portal>
	
	<portal 
	  id="chkCyborg" 
	  style="chkNormal" 
	  showinvalid="yes"
	  tiptext="Click if hero is a Cyborg">
	  <checkbox 
	    field="spcIsCyborg"
		message="Character is a Cyborg?"
		/>
	  </portal>
  
    <portal
      id="lblmenu1"
      style="lblBrdLeft">
      <label
        field="usrLabel4">
        </label>
      </portal>

    <portal
      id="lblmenu2"
      style="lblBrdLeft">
      <label
        field="usrLabel5">
        </label>
      </portal>

    <portal
      id="lblmenu3"
      style="lblBrdLeft">
      <label
        field="usrLabel6">
        </label>
      </portal>

    <portal
      id="menu1"
      style="menuNormal">
      <menu_things
        field="usrChosen4"
		namefield="asName"
        component="none"
        maxvisible="10"
        usepicksfield="usrSource4"
        candidatefield="usrCandid4">
        </menu_things>
      </portal>

    <portal
      id="menu2"
      style="menuNormal">
      <menu_things
        field="usrChosen5"
		namefield="asName"
        component="none"
        maxvisible="10"
        usepicksfield="usrSource5"
        candidatefield="usrCandid5">
        </menu_things>
      </portal>

    <portal
      id="menu3"
      style="menuNormal">
      <menu_things
        field="usrChosen6"
		namefield="asName"
        component="none"
        maxvisible="10"
        usepicksfield="usrSource6"
        candidatefield="usrCandid6">
        </menu_things>
      </portal>
	
    <position><![CDATA[
      ~position our labels on the left
      portal[lblmenu1].height = portal[menu1].height
	  portal[lblmenu1].left = 0
	  portal[lblmenu1].width = 180

	  portal[menu1].left = portal[lblmenu1].right + 5
	  portal[menu1].width = 150

      portal[lblmenu2].top = portal[lblmenu1].bottom + 10
	  portal[lblmenu2].height = portal[menu1].height
	  portal[lblmenu2].left = portal[lblmenu1].left
	  portal[lblmenu2].width = portal[lblmenu1].width

	  portal[menu2].top = portal[menu1].bottom + 10
	  portal[menu2].left = portal[menu1].left
	  portal[menu2].width = portal[menu1].width

      portal[lblmenu3].top = portal[lblmenu2].bottom + 10
      portal[lblmenu3].height = portal[menu1].height
	  portal[lblmenu3].left = portal[lblmenu1].left
	  portal[lblmenu3].width = portal[lblmenu1].width

	  portal[menu3].top = portal[menu2].bottom + 10
	  portal[menu3].left = portal[menu1].left
	  portal[menu3].width = portal[menu1].width
	  
      portal[chkAugment].top = portal[lblmenu3].bottom + 10
      portal[chkAugment].height = portal[menu1].height
	  portal[chkAugment].left = portal[lblmenu1].left
	  portal[chkAugment].width = portal[lblmenu1].width + 50
	  
      portal[chkCyborg].top = portal[chkAugment].bottom + 10
      portal[chkCyborg].height = portal[menu1].height
	  portal[chkCyborg].left = portal[lblmenu1].left
	  portal[chkCyborg].width = portal[lblmenu1].width + 50
	  
      ~determine whether our portals are visible; we only show them if requested
      ~Note: Remember that a non-empty tagexpr field indicates menu selection is used.
      if (field[usrCandid4].isempty <> 0) then
        portal[lblmenu1].visible = 0
        portal[menu1].visible = 0
      elseif (field[usrLabel4].isempty <> 0) then
        portal[lblmenu1].visible = 0
        endif
	  
      if (field[usrCandid5].isempty <> 0) then
        portal[lblmenu2].visible = 0
        portal[menu2].visible = 0
      elseif (field[usrLabel5].isempty <> 0) then
        portal[lblmenu2].visible = 0
        endif

      if (field[usrCandid6].isempty <> 0) then
        portal[lblmenu3].visible = 0
        portal[menu3].visible = 0
      elseif (field[usrLabel6].isempty <> 0) then
        portal[lblmenu3].visible = 0
        endif

		
      ~if a menu is visible, make sure it has a selection
      if (portal[menu1].visible <> 0) then
        if (field[usrChosen4].ischosen = 0) then
          perform portal[menu1].setstyle[menuError]
          endif
        endif
      if (portal[menu2].visible <> 0) then
        if (field[usrChosen5].ischosen = 0) then
          perform portal[menu2].setstyle[menuError]
          endif
        endif
      if (portal[menu3].visible <> 0) then
        if (field[usrChosen6].ischosen = 0) then
          perform portal[menu3].setstyle[menuError]
          endif
        endif
		
	]]></position>

    </template>	

  <template
    id="spSpcMixed"
    name="Mixed Heritage Menus"
    compset="Species"
    marginhorz="3"
    marginvert="2">

    <portal
      id="lblmenuPrimary"
      style="lblBrdLeft">
      <label>
        <labeltext><![CDATA[
          @text = "Primary Species:"
          ]]></labeltext>
        </label>
      </portal>

    <portal
      id="lblmenuSecondary"
      style="lblBrdLeft">
      <label>
        <labeltext><![CDATA[
          @text = "Secondary Species:"
          ]]></labeltext>
        </label>
      </portal>

    <portal
      id="menuPrimary"
      style="menuNormal">
      <menu_things
        field="spcPrimary"
        component="none"
        maxvisible="10">
		<candidate>component.Species &amp; !thingid.spcMixedHer</candidate>
        </menu_things>
      </portal>

    <portal
      id="menuSecondary"
      style="menuNormal">
      <menu_things
        field="spcSecondary"
        component="none"
        maxvisible="10">
		<candidate>component.Species &amp; !thingid.spcMixedHer</candidate>
        </menu_things>
      </portal>

    <portal
      id="addtraits"
      style="actBig"
      tiptext="Click to add selected species traits.">
      <action
        action="trigger">
        <trigger><![CDATA[
	      var primary as string
	      var secondary as string
		  var secondaryspecies as string
		  var txt as string
	      var myTrait as string
		  var myAttributes as string
	      var mySpecAbil as string
	  
	      if (field[spcPrimary].ischosen <> 0) then
	        primary = field[spcPrimary].chosen.idstring

	        txt = "SpeciesTrait." & primary
			
			foreach thing in Trait where txt
              myTrait = eachthing.idstring
              nexteach
		    
			perform hero.addpick[trTrait,myTrait]
			
			if (#issecondedition[] <> 0) then
			  txt = "Species." & primary
			  
			  foreach thing in SpeciesAbility where txt
			    mySpecAbil = eachthing.idstring
			    nexteach
			
			  perform hero.addpick[trSpeciesAbil,mySpecAbil]
			  endif
			  
			endif
			
	      if (field[spcSecondary].ischosen <> 0) then
	        secondary = field[spcSecondary].chosen.idstring
	        secondaryspecies = field[spcSecondary].chosen.field[name].text

	        txt = "SpeciesTrait." & secondary
			
			foreach thing in Trait where txt
              myTrait = eachthing.idstring
              nexteach
		    
			perform hero.addpick[trTrait,myTrait]
			
		    endif
          ]]></trigger>
        <buttontext><![CDATA[
          @text = "Add Traits"
		  if (#issecondedition[] <> 0) then
		    @text &= " & Species Ability"
			endif
          ]]></buttontext>
        </action>
      </portal>
	  
    <position><![CDATA[
      ~position our labels on the left
      portal[lblmenuPrimary].height = portal[menuPrimary].height
	  portal[lblmenuPrimary].left = 0
	  portal[lblmenuPrimary].width = 150

	  portal[menuPrimary].left = portal[lblmenuPrimary].right + 5
	  portal[menuPrimary].width = 150

      portal[lblmenuSecondary].top = portal[lblmenuPrimary].bottom + 10
	  portal[lblmenuSecondary].height = portal[menuPrimary].height
	  portal[lblmenuSecondary].left = portal[lblmenuPrimary].left
	  portal[lblmenuSecondary].width = portal[lblmenuPrimary].width

	  portal[menuSecondary].top = portal[menuPrimary].bottom + 10
	  portal[menuSecondary].left = portal[menuPrimary].left
	  portal[menuSecondary].width = portal[menuPrimary].width
	  
	  ~position trait button to the right of the menus
	  portal[addtraits].top = portal[menuPrimary].top
	  portal[addtraits].height = 20
	  portal[addtraits].left = portal[menuPrimary].right + 10
	  portal[addtraits].width = 80
	  
	  if (#issecondedition[] <> 0) then
	    portal[addtraits].height = 50
	  else
	    portal[addtraits].height = 20
		endif
		
      ~if a menu is visible, make sure it has a selection
	  portal[lblmenuPrimary].visible = hero.tagis[Hero.MixedHeritage] 
      portal[menuPrimary].visible = hero.tagis[Hero.MixedHeritage] 
	  
	  portal[lblmenuSecondary].visible = hero.tagis[Hero.MixedHeritage] 
	  portal[menuSecondary].visible = hero.tagis[Hero.MixedHeritage] 
	  
	  portal[addtraits].visible = hero.tagis[Hero.MixedHeritage] 
	  
	]]></position>

    </template>	
	
  <!-- species layout
        This layout orchestrates the display of the visual elements that comprise
        the Skills tab. This amounts to a title at the top and a dynamic table below
        where the user can add and adjust the skills he wants.

        The logic for this layout is similar to (albeit much simpler than) the
        logic for the Basics tab. So please refer to the Basics tab for more details.
  -->
  <layout
    id="species">
    <templateref template="spSpcTemp" useagent="yes"/>
    <templateref template="spSpcMenus" useagent="yes"/>
    <templateref template="spSpcMixed" useagent="yes"/>
	
    <!-- This script sizes and positions the layout and its child visual elements. -->
    <position><![CDATA[

      ~both tables span the full width
      template[spSpcTemp].width = width
	  template[spSpcTemp].height = height/2
      template[spSpcTemp].visible = 1

      template[spSpcMixed].top = template[spSpcTemp].bottom + 30
      template[spSpcMixed].width = width
	  template[spSpcMixed].height = 50
      template[spSpcMixed].visible = 1 
	  
      template[spSpcMenus].top = template[spSpcMixed].bottom + 30
      template[spSpcMenus].width = width
	  template[spSpcMenus].height = 150
      template[spSpcMenus].visible = 1

      ]]></position>

    </layout>

  <!-- sorcery panel
        This is the "Sorcery" panel shown within Hero Lab.
  -->
  <panel
    id="species"
    name="Species"
    marginhorz="5"
    marginvert="5"
    order="10"
    agentcompset="Species"
    agentlive="IsSpecies"
    agentname="name"
    >
    <live>!HideTab.species</live>
    <layoutref layout="species"/>
    <position><![CDATA[
      ]]></position>
    </panel>


  </document>
