<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the assortment of derived traits for the game system. Derived
      traits are calculated via scripts and based on the attributes from which they
      are derived.

      Since derived traits are based upon other traits, we have a "chicken-and-egg"
      situation with respect to script evaluation timing. The "Trait" component
      auto-calculates the final value for the traits derived FROM, while the "Derived"
      component provides a second calculation after that to incorporate the results of
      the special calculation for each derived trait. Each derived trait must then
      calculate the new derived value between those two times, which is what we
      accomplish below within the eval script for each derived trait. The script is
      timed to occur at Traits/4000 to splice it between the two other scripts that
      mentioned above and performed by the component.

      We calculate the derived value as a "bonus" for the trait, allowing it to be
      added in appropriately by the component script. Trait bonuses can arise from
      multiple sources, so we need to ADD our calculated amount instead of setting the
      amount.

      All trait values are rounded down, so we apply the proper rounding as needed.
      Rounding must be performed BEFORE we add the adjustment.

      Appropriate tags are assigned to each derived trait to control where the trait
      displayed to the user and the order in which the traits are displayed.
-->

<document signature="Hero Lab Data">

  <!-- Stress Trait -->
  <thing
    id="trStress"
    name="Stress"
    compset="Ability"
    isunique="yes"
    description="Description goes here">
    <fieldval field="abiAbbrev" value="Str"/>
    <tag group="explicit" tag="1"/>
    <tag group="User" tag="Power"/>
    <eval index="1" phase="Stress" priority="5500"><![CDATA[
      field[abiBonus].value += #stressnow[]

      ]]></eval>
    </thing>

  <!-- Determination Trait -->
  <thing
    id="trDetermination"
    name="Determination"
    compset="Ability"
    isunique="yes"
    description="Description goes here">
    <fieldval field="abiAbbrev" value="Powr"/>
    <tag group="explicit" tag="4"/>
    <tag group="User" tag="Power"/>
    <eval index="1" phase="Ability" priority="4000">
      <before name="Derived abiFinal"/>
      <after name="Calc abiFinal"/><![CDATA[
      field[abiBonus].value += 3
      ]]></eval>
    </thing>

  <!-- Defense Trait -->
  <thing
    id="trResist"
    name="Resistance"
    compset="Ability"
    isunique="yes"
    description="Description goes here">
    <fieldval field="abiAbbrev" value="Def"/>
    <tag group="explicit" tag="3"/>
    <tag group="User" tag="Combat"/>
    <tag group="DashTacCon" tag="Combat"/>
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      ~testing
      ]]></eval>
    <eval index="2" phase="Render" priority="10000"><![CDATA[
	  var summTxt as string
	  var totNon as number
	  
	  
      ~use the outSummary field for display of resistance value
      summTxt = field[abiFinal].value
	  if (field[abiValue1].value <> 0) then
	    totNon = field[abiValue1].value + field[abiFinal].value
	    summTxt &= " (" & totNon & " nl)"
	    endif
		
	  field[outSummary].text = summTxt
      ]]></eval>
    </thing>

  <!-- Initiative Trait -->
  <thing
    id="trInit"
    name="Initiative"
    compset="Ability"
    isunique="yes"
    description="Description goes here">
    <fieldval field="abiAbbrev" value="Init"/>
    <tag group="explicit" tag="2"/>
    <tag group="User" tag="Combat"/>
    <tag group="DashTacCon" tag="Combat"/>
    <tag group="DashTacCon" tag="Traits"/>
    <!-- Calculate the Initiative trait as "(Dex + Wis) / 5" -->
    <eval index="1" phase="Ability" priority="4000">
      <before name="Derived abiFinal"/>
      <after name="Calc abiFinal"/><![CDATA[
      var value as number
      value = 0
      value = round(value,0,-1)
      field[abiBonus].value += value
      ]]></eval>
    </thing>

  </document>
