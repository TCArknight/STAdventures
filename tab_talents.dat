<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the definition of the "Abilities" tab panel. This tab is where
      the user selects the special abilities for the character.

      All public visual elements used with this tab panel start with the prefix "ab"
      to associate them with the tab.
-->

<document signature="Hero Lab Data">


  <!-- abTalent portal

  -->
  <portal
    id="abTalent"
    style="tblNormal">
    <table_dynamic
      component="Talent"
      showtemplate="abPick"
      choosetemplate="SimpleItem"
	  choosesortset="TalentSort"
      showfixedlast="no"
      addpick="resTalent"
	  candidatepick="ExprHelp"
	  candidatefield="ehTalExp">
      <titlebar><![CDATA[
        @text = "Add a Talent - " & hero.child[resTalent].field[resSummary].text
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Talents: " & hero.child[resTalent].field[resSummary].text
        ]]></headertitle>
      <additem><![CDATA[
        ~if we're in advancement mode, we've been frozen, so display accordingly
        if (state.iscreate = 0) then
          @text = "{text clrgrey}Add Talents Via Advances Tab"
          done
          endif

        ~set the color based on whether the proper number of slots are allocated
        if (field[resLeft].value = 0) then
          @text = "{text clrgrey}"
        elseif (field[resLeft].value < 0) then
          @text = "{text clrwarning}"
          endif
        @text &= "Add New Talent"
        ]]></additem>
      </table_dynamic>
    </portal>

  <!-- abPod portal
  -->
  <portal
    id="abPod"
    style="tblNormal">
    <table_dynamic
      component="MissionPod"
      showtemplate="abPickPod"
      choosetemplate="SimpleItem"
      showfixedlast="no"
      addpick="resShipPod">
      <titlebar><![CDATA[
        @text = "Add a Mission Pod - " & hero.child[resShipPod].field[resSummary].text
        ]]></titlebar>
      <description/>
      <headertitle><![CDATA[
        @text = "Mission Pods: " & hero.child[resShipPod].field[resSummary].text
        ]]></headertitle>
      <additem><![CDATA[
        ~set the color based on whether the proper number of slots are allocated
        if (field[resLeft].value = 0) then
          @text = "{text clrgrey}"
        elseif (field[resLeft].value < 0) then
          @text = "{text clrwarning}"
          endif
        @text &= "Add New Pod"
        ]]></additem>
      </table_dynamic>
    </portal>

  <!-- abPick template
        Displays the name of the pick/thing and an info button with the basic
        description text. This is basically the "SimpleItem" template, with one
        key difference. Auto-added abilities such as those conferred by races are
        sorted and colored differently to distinguish their nature.
  -->
  <template
    id="abPick"
    name="Talent Pick"
    compset="Talent"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>

    <portal
      id="menu1"
      style="menuNormal">
      <menu_things
        field="usrChosen1"
        component="none"
        maxvisible="10"
        usepicksfield="usrSource1"
        candidatefield="usrCandid1">
        </menu_things>
      </portal>
	  
    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)

      ~determine whether our menus are visible
      ~Note: Remember that a non-empty tagexpr field indicates menu selection is used.
      if (field[usrCandid1].isempty <> 0) then
        portal[menu1].visible = 0
        endif
		
      ~position our tallest portal at the top
      portal[info].top = 0

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[delete].centervert
      perform portal[menu1].centervert
	  
      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

      ~position the name on the left and use availble space, with a gap for menus
      portal[name].left = 0
      portal[name].width = minimum(portal[name].width,portal[info].left - portal[name].left - 75)

	  ~position the menus to the right of the name in the available space
      perform portal[menu1].alignrel[ltor,name,10]
      portal[menu1].width = (portal[info].left - portal[menu1].left - 20) / 2

      ~if a menu is visible, make sure it has a selection
      if (portal[menu1].visible <> 0) then
        if (field[usrChosen1].ischosen = 0) then
          perform portal[menu1].setstyle[menuErrSm]
          endif
        endif
		
      ~if the ability is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>

  <!-- abPick template
        Displays the name of the pick/thing and an info button with the basic
        description text. This is basically the "SimpleItem" template, with one
        key difference. Auto-added abilities such as those conferred by races are
        sorted and colored differently to distinguish their nature.
  -->
  <template
    id="abPickPod"
    name="Mission Pod Pick"
    compset="MissionPod"
    marginhorz="3"
    marginvert="2">

    <portal
      id="name"
      style="lblNormal"
      showinvalid="yes">
      <label
        field="name">
        </label>
      </portal>
	  
    <portal
      id="info"
      style="actInfo">
      <action
        action="info">
        </action>
      <mouseinfo/>
      </portal>

    <portal
      id="delete"
      style="actDelete"
      tiptext="Click to delete this item">
      <action
        action="delete">
        </action>
      </portal>

    <position><![CDATA[
      ~set up our height based on our tallest portal
      height = portal[info].height

      ~if this is a "sizing" calculation, we're done
      doneif (issizing <> 0)
	  
      ~position our tallest portal at the top
      portal[info].top = 0

      ~center the other portals vertically
      perform portal[name].centervert
      perform portal[delete].centervert
	  
      ~position the delete portal on the far right
      perform portal[delete].alignedge[right,0]

      ~position the info portal to the left of the delete button
      perform portal[info].alignrel[rtol,delete,-8]

      ~position the name on the left and use availble space, with a gap for menus
      portal[name].left = 0
      portal[name].width = minimum(portal[name].width,portal[info].left - portal[name].left - 75)
		
      ~if the ability is auto-added, change its font to indicate that fact
      if (candelete = 0) then
        perform portal[name].setstyle[lblAuto]
        endif
      ]]></position>

    </template>
	
  <!-- abilities layout
        This layout orchestrates the display of the visual elements that comprise
        the Abilities tab. This amounts to a title at the top and a dynamic table
        below where the user can add the special abilities he wants.

        The logic for this layout is similar to (albeit much simpler than) the
        logic for the Basics tab. So please refer to the Basics tab for more details.
  -->
  <layout
    id="talents">
    <portalref portal="abTalent" taborder="10"/>
    <portalref portal="abPod" taborder="20"/>
	
    <!-- This script sizes and positions the layout and its child visual elements. -->
    <position><![CDATA[
      ~freeze our table in advancement mode to disable adding new choices
      ~Note: All freezing must be done *before* any positioning is performed.
      if (state.iscreate = 0) then
        portal[abTalent].freeze = 1
        portal[abPod].freeze = 1
        endif

	  portal[abPod].visible = hero.tagis[Ship.MissionPod]
	  
      ~position and size the table to span the full layout; it will only use the
      ~vertical space that it actually needs
      perform portal[abTalent].autoplace
	  perform portal[abPod].autoplace[20]
      ]]></position>

    </layout>


  <!-- abilities panel
        This is the "Abilities" panel shown within Hero Lab. Since we want this
        panel to appear after Basics and within the traits grouping, we assign it
        an "order" of 120.

        The logic for this panel is similar to the logic for the Basics panel, so
        please refer to the Basics panel for more details.
  -->
  <panel
    id="talents"
    name="Talents"
    marginhorz="5"
    marginvert="5"
    order="120">
    <live>!HideTab.talents</live>
    <layoutref layout="talents"/>
    <position><![CDATA[
      ]]></position>
    </panel>
  </document>
